{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","console","log","err","searchForm","document","getElementById","searchInput","addEventListener","value","querySelector","showMessage","reddit","output","results","forEach","image","post","preview","images","source","url","logo","title","truncateText","selftext","subreddit","score","innerHTML","e","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"git-find.070e1097.map","sourceRoot":"..","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit, sortBy) {\n    return fetch(\n      `http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\n    )\n      .then(res => res.json())\n      .then(data => data.data.children.map(data => data.data))\n      .catch(err => console.log(err));\n  }\n};\n","import reddit from \"./redditapi\";\nimport logo from \"./reddit.jpeg\";\n// console.log(`.${logo}`);\n\nconst searchForm = document.getElementById(\"search-form\");\nconst searchInput = document.getElementById(\"search-input\");\n\n//form event\nsearchForm.addEventListener(\"submit\", e => {\n  //get search term\n  const searchTerm = searchInput.value;\n\n  //get sort\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n\n  //limit\n  const searchLimit = document.getElementById(\"limit\").value;\n\n  //check input\n  if (searchTerm === \"\") {\n    //show message\n    showMessage(\"please add a search term\", \"alert-danger\");\n  }\n\n  //clear input\n  searchInput.value = \"\";\n\n  //search reddit\n  reddit.search(searchTerm, searchLimit, sortBy).then(results => {\n    // console.log(results);\n    let output = `<div class=\"card-columns\">`;\n\n    //loop post\n    results.forEach(post => {\n      //check image\n      const image = post.preview\n        ? post.preview.images[0].source.url\n        : `${logo}`;\n\n      output += `\n        <div class=\"card mb-3 bg-light\">\n            <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n            <div class=\"card-body text-dark\">\n                <h5 class=\"card-title \">${post.title}</h5>\n                <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\n                <a href=\"${\n                  post.url\n                }\" target=\"blank\" class=\"btn btn-primary\">Read more</a>\n                <hr>\n                <span class=\"badge badge-secondary\">Subreddit: ${\n                  post.subreddit\n                }</span>\n                <span class=\"badge badge-dark\">Score: ${post.score}</span>\n            </div>\n        </div>\n        `;\n    });\n\n    output += \"</div>\";\n    document.getElementById(\"results\").innerHTML = output;\n  });\n\n  e.preventDefault();\n});\n\n//show message\nfunction showMessage(message, className) {\n  //crear div\n  const div = document.createElement(\"div\");\n\n  //add class\n  div.className = `alert ${className}`;\n\n  //add text\n  div.appendChild(document.createTextNode(message));\n\n  //get parent container\n  const searchContainer = document.getElementById(\"search-container\");\n\n  //get search\n  const search = document.getElementById(\"search\");\n\n  //inser message\n  searchContainer.insertBefore(div, search);\n\n  //timeout alert\n  setTimeout(() => document.querySelector(\".alert\").remove(), 3000);\n}\n\n//truncate text\nfunction truncateText(text, limit) {\n  const shortened = text.indexOf(\" \", limit);\n  if (shortened == -1) return text;\n  return text.substring(0, shortened);\n}\n"]}